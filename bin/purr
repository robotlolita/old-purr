#!/usr/bin/env node
var doc = "purr - A purely object oriented, referentially transparent language!\n"
        + "\n"
        + "Usage:\n"
        + "  purr <file>\n"
        + "  purr -c <file>\n"
        + "  purr -a <file>\n"
        + "  purr -h | --help\n"
        + "  purr -v | --version\n"
        + "\n"
        + "Options:\n"
        + "  -c, --compile   Compiles the file rather than interpreting.\n"
        + "  -a, --ast       Displays the AST.\n"
        + "  -h, --help      Displays this screen and exits.\n"
        + "  -v, --version   Displays the version number and exits.\n"


var fs = require('fs')

function read(filename) { return fs.readFileSync(filename, 'utf-8') }

var docopt = require('docopt').docopt
var path   = require('path')
var pkg    = require('../package')
var purr   = require('../')

var args = docopt(doc, { version: pkg.version })
var root = path.resolve('.')

; (args['--compile'])?  console.log(purr.compile(purr.parse(read(args['<file>']))))
: (args['--ast'])?      console.log(JSON.stringify(purr.parse(read(args['<file>'])), null, 2))
:                       load(path.resolve(root, args['<file>'])
                            ,';\nmodule.exports(__Root).main()')


function load(p, more) {
  var module

  console.log(purr.compile(purr.parse(read(p))) + more)
  new Function('load', 'module', purr.compile(purr.parse(read(p))) + more)
      ( function(a) { return load(path.resolve(root, p, '..', a), '') }
      , module = { exports: {} })

  return module.exports
}